using Oracle.ManagedDataAccess.Client;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace AppCentralRisque
{
  class DossierEngagEtExploit
    {
        public static void clean()
        {
            SqlConnection con = Connexion.GetDBConnectionCREM();
            con.Open();
            SqlCommand insd = new SqlCommand("use crem delete from temp_declarations", con);
            insd.ExecuteNonQuery();
            con.Close();
        }
        public static DataSet Getbdd(string fp, string dd)
        {
            OracleConnection conn = Connexion.GetDBConnectionKSIOP();
            DataSet dataset = new DataSet();
            OracleCommand cmd = new OracleCommand();
            conn.Open();
           // cmd.CommandText = "SELECT dos.dosnum as Num_DOS_128, SOF_CR_GET_CODE_CLIENT(dos.dosid, '"+fp+"') as codeClient, SOF_CR_Mois_Annee('"+dd+"') as Periode_DCL,  'DCRE' as Type_F, SOF_CR_GET_Identif_CLIENT(dos.dosid, '"+fp+"') as ID_Client_D32, SOF_CR_GET_Type_IdentIFiant(dos.dosid, '"+fp+"') as Type_Id_CLT, '"+fp+"' as Date_Arrete, floor(SOF_CR_GET_ENCOURS(dos.dosid, '"+fp+"')) as encours_s101, SOF_CR_GET_NIV_RESPONSABILITE(dos.dosid) as NIV_RESP_S102, SOF_CR_GET_SITUATION_CREDIT(dosid, '"+fp+"') as Etat_CRE_S103, SOF_CR_GET_TypeRetard(dos.dosid, '"+fp+"') as Type_Retard_S104, SOF_CR_GET_DUREE_INITIALE(dos.dosid) as Duree_INIT_S105, SOF_CR_GET_DUREE_RESTANTE(dos.dosid, '"+fp+"') as Duree_Rest_S106, SOF_CR_GET_Type_CREDIT(dos.dosid) as Type_CRE_S107, '012' as Code_Pays_S108,  0 as Mensualité_S110, dos.devcode as DEVISE_S111, SOF_CR_GET_RIB_CLIENT(dos.dosid, '"+fp+"') as RIB_S113, '00001' as Code_Agence_S114, SOF_CR_GET_NAFCODE(dos.dosid, '"+fp+"') as Activite_S115, floor(SOF_CR_GET_MT_ACCORD(dos.dosid, '"+fp+"')) as Montant_Accord_S117, NVL(SOF_CR_GET_TAUX_DOS(dos.dosid), SOF_GET_TAUX_DOS_V3(dos.dosid)) as Taux_S118, 0 as Cout_CRE_S119, SOF_CR_GET_FIRST_ECH_IMP(dos.dosid, '"+fp+"') as Date_First_Imp_S120, floor(SOF_CR_GET_CAPITAL_IMP(dos.dosid, '"+fp+"')) as Capital_Imp_S121, floor(SOF_CR_GET_INT_IMP(dos.dosid, '"+fp+"')) as Int_Imp_S122, NULL as Date_Rejet_S123, SOF_CR_GET_DATE_OCTROI(dos.dosid) as Date_Octroi_S124, SOF_CR_GET_DATE_EXPIR(dos.dosid, '"+fp+"') as Date_Exp_S125, floor(SOF_CR_GET_INT_COURU(dos.dosid, '"+fp+"')) as int_couru_S126, SOF_CR_GET_NBRE_ECH_IMP(dos.dosid, '"+fp+"') as Nbre_Ech_Imp_S130, SOF_CR_GET_CODE_WILAYA(dos.dosid, '"+fp+"') as Wilaya_S131, 'xxxxx' as Num_File, NULL as Id_Plafond_s129, '0' as cede_imp FROM dossier dos, dual WHERE dos.tpgcode in ('CBM', 'CBMIM', 'CBI', 'CMT', 'EPS') and sof_phase_dos(dos.dosid, '"+fp+"')in ('Engagement', 'Réalisation', 'Exploitation') and(sof_CR_GET_DATE_sans_suite(dos.dosid) is null or sof_CR_GET_DATE_sans_suite(dos.dosid) > '"+fp+"') and dos.dosnum not in (2012060008, 2012030002, 2014030017, 2014030018, 2014050001) ORDER BY codeclient,dos.dosnum";
            cmd.CommandText = "SELECT dos.dosnum as Num_DOS_128, SOF_CR_GET_CODE_CLIENT(dos.dosid, '" + fp + "') as codeClient, SOF_CR_Mois_Annee('" + dd + "') as Periode_DCL, 'DCRE' as Type_F, SOF_CR_GET_Identif_CLIENT(dos.dosid, '" + fp + "') as ID_Client_D32, SOF_CR_GET_Type_IdentIFiant(dos.dosid, '" + fp + "') as Type_Id_CLT,'" + fp + "' as Date_Arrete,floor(SOF_CR_GET_ENCOURS(dos.dosid, '" + fp + "')) as encours_s101, SOF_CR_GET_NIV_RESPONSABILITE(dos.dosid) as NIV_RESP_S102,SOF_CR_GET_SITUATION_CREDIT(dosid, '" + fp + "') as Etat_CRE_S103, SOF_CR_GET_TypeRetard(dos.dosid, '" + fp + "') as Type_Retard_S104, SOF_CR_GET_DUREE_INITIALE(dos.dosid) as Duree_INIT_S105,SOF_CR_GET_DUREE_RESTANTE(dos.dosid, '" + fp + "') as Duree_Rest_S106,SOF_CR_GET_Type_CREDIT(dos.dosid) as Type_CRE_S107,'012' as Code_Pays_S108, 0 as Mensualité_S110, dos.devcode as DEVISE_S111, SOF_CR_GET_RIB_CLIENT(dos.dosid, '" + fp + "') as RIB_S113, '00001' as Code_Agence_S114, SOF_CR_GET_NAFCODE(dos.dosid, '" + fp + "') as Activite_S115, floor(SOF_CR_GET_MT_ACCORD(dos.dosid, '" + fp + "')) as Montant_Accord_S117, NVL(SOF_CR_GET_TAUX_DOS(dos.dosid), SOF_GET_TAUX_DOS_V3(dos.dosid)) as Taux_S118, 0 as Cout_CRE_S119, SOF_CR_GET_FIRST_ECH_IMP(dos.dosid, '" + fp + "') as Date_First_Imp_S120, floor(SOF_CR_GET_CAPITAL_IMP(dos.dosid, '" + fp + "')) as Capital_Imp_S121, floor(SOF_CR_GET_INT_IMP(dos.dosid, '" + fp + "')) as Int_Imp_S122, NULL as Date_Rejet_S123, SOF_CR_GET_DATE_OCTROI(dos.dosid) as Date_Octroi_S124,SOF_CR_GET_DATE_EXPIR(dos.dosid, '" + fp + "') as Date_Exp_S125,floor(SOF_CR_GET_INT_COURU(dos.dosid, '" + fp + "')) as int_couru_S126,SOF_CR_GET_NBRE_ECH_IMP(dos.dosid, '" + fp + "') as Nbre_Ech_Imp_S130,SOF_CR_GET_CODE_WILAYA(dos.dosid, '" + fp + "') as Wilaya_S131, 'xxxxx' as Num_File, NULL as Id_Plafond_s129,'0' as cede_imp FROM dossier dos, dual WHERE dos.tpgcode in ('CBM', 'CBMIM', 'CBI', 'CMT', 'EPS') and sof_phase_dos(dos.dosid,'" + fp + "')in ('Engagement', 'Réalisation', 'Exploitation') and(sof_CR_GET_DATE_sans_suite(dos.dosid) is null or sof_CR_GET_DATE_sans_suite(dos.dosid) > '" + fp + "') and dos.dosnum not in (2012060008, 2012030002, 2014030017, 2014030018, 2014050001, 2020110020) ORDER BY codeclient,dos.dosnum";
            cmd.Connection = conn;
            OracleDataAdapter adapter = new OracleDataAdapter(cmd);
     
            adapter.Fill(dataset);
            return dataset;
           
        }

        public static List<string> AfficherErreur(DataSet dts)
        {
            string err = "";
            List<string> myliste = new List<string>();
            foreach (DataRow dr in dts.Tables[0].Rows)
            {
                if (dr["ID_CLIENT_D32"].ToString() == "NO CLIENT DANS DOS")
                {
                    err = "Le client dans le dossier n° : " + (string)dr["NUM_DOS_128"] + "n'existe pas";
                    Console.WriteLine(err);
                    myliste.Add(err);
                }
                if (dr["TYPE_ID_CLT"].ToString() == "i1" && dr["ID_CLIENT_D32"].ToString().Length != 15 || dr["TYPE_ID_CLT"].ToString() == "i3" && dr["ID_CLIENT_D32"].ToString().Length != 20)
                {
                    err = ("  la taille de l'identifiant de client  " + dr["CODECLIENT"] + "  dans le dossier  " + dr["NUM_DOS_128"] + " est different de 20 chiffre  ");
                    myliste.Add(err);
                }
                if (dr["RIB_S113"].ToString().Length != 20)
                {
                    err = ("  veuillez verifier le rib de client  " + dr["ID_CLIENT_D32"] + "  dans le dossier  " + dr["NUM_DOS_128"]);
                    myliste.Add(err);
                }
                if (dr["MONTANT_ACCORD_S117"] == null)
                {
                    err = ("  veuillez verifier le montant accordé au client  " + dr["ID_CLIENT_D32"] + "  dans le dossier  " + dr["NUM_DOS_128"]);
                    myliste.Add(err);
                }

            }
            return (myliste);
        }
    }
}
